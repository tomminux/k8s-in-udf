---
###############################################################################
##                                                                           ##
## Installing software                                                       ##
##   - docker.io                                                             ##
##   - kubeadm, kubectl, kubelet                                             ##
##                                                                           ##
###############################################################################

- hosts: all
  remote_user: root
  tasks:

    - name: Upgrade all packages to the latest version
      apt:
        update_cache: yes
        upgrade: dist

    - name: Install docker
      apt:
        name: "docker.io"
        state: latest

    - name: Enable docker
      command: systemctl enable docker

    - name: Start docker
      command: systemctl start docker

    - name: add Kubernetes apt-key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: add Kubernetes' APT repository
      apt_repository:
       repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
       state: present
       filename: 'kubernetes'

    - name: install kubelet
      apt:
        name: kubelet
        state: present
        update_cache: true

    - name: install kubeadm
      apt:
        name: kubeadm
        state: present

    - name: install kubectl
      apt:
        name: kubectl
        state: present

    - name: Copy hosts file on cluster's master and nodes
      copy:
        src: k8s-files/hosts
        dest: /etc/hosts

    - name: Enable rc.local
      template:
        src: rc.local.j2
        dest: /etc/rc.local
        mode: 0700

    - name: setting hostname
      template:
        src: hostname.j2
        dest: /etc/hostname

- hosts: all
  remote_user: root
  tasks:
    - name: Restart servers in k8s cluster
      reboot:

###############################################################################
##                                                                           ##
## Initialize k8s-master and join k8s_nodes                                  ##
##                                                                           ##
###############################################################################

- hosts: k8s-master
  remote_user: root
  tasks:

    - name: k8s Cluster initialization
      shell: kubeadm init --apiserver-advertise-address {{ secondNetIf_ip }} --pod-network-cidr 10.244.0.0/16 --token-ttl 0 >> cluster_initialized.txt
      args:
        creates: cluster_initialized.txt

    - name: create .kube directory for user root
      become: yes
      remote_user: root
      file:
        path: $HOME/.kube
        state: directory
        mode: 0755

    - name: copy admin.conf to user's kube config for user root
      remote_user: root
      copy:
        src: /etc/kubernetes/admin.conf
        dest: $HOME/.kube/config
        remote_src: yes
#        owner: ubuntu

    - name: create .kube directory for user ubuntu
      become: yes
      remote_user: root
      file:
        path: /home/ubuntu/.kube
        state: directory
        mode: 0755
        owner: ubuntu

    - name: copy admin.conf to user's kube config for user ubuntu
      remote_user: root
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/ubuntu/.kube/config
        remote_src: yes
        owner: ubuntu

    - name: create .kube directory for user ubuntu on DevSecOps Server (Ansible controller)
      local_action:
        module: file
        path: /home/ubuntu/.kube
        state: directory
        mode: 0755
        owner: ubuntu

    - name: copy admin.conf to user's kube config for user ubuntu on local machine (SevSecOps Server)
      fetch:
        src: /etc/kubernetes/admin.conf
        dest: /home/ubuntu/.kube/config
        flat: yes

    - name: copy admin.conf to user's kube config for user ubuntu
      remote_user: root
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/ubuntu/.kube/config
        remote_src: yes
        owner: ubuntu

    - name: Create k8s configuration files' directory structure
      file:
        path: /usr/local/k8s-configs/flannel
        state: directory

    - name: Copy kube-flannel.yml POD Network Configuration File
      copy:
        src: k8s-files/kube-flannel.yml
        dest: /usr/local/k8s-configs/flannel/kube-flannel.yml

    - name: Apply POD Network on Master node
      shell: kubectl apply -f /usr/local/k8s-configs/flannel/kube-flannel.yml >> pod_network_setup.txt
      args:
        creates: pod_network_setup.txt

    - name: get join command
      shell: kubeadm token create --print-join-command
      register: join_command_raw

    - name: set join command
      set_fact:
        join_command: "{{ join_command_raw.stdout_lines[0] }}"

- hosts: k8s_nodes
  become: yes
  remote_user: root
  tasks:
    - name: join cluster
      shell: "{{ hostvars['k8s-master'].join_command }} >> node_joined.txt"
      args:
        creates: node_joined.txt
